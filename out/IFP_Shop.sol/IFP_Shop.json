{"abi":[{"type":"function","name":"cancelActiveSale","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimPowersellerBadge","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"disputeSale","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"},{"name":"buyerReasoning","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"disputedSaleReply","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"},{"name":"sellerReasoning","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"doBuy","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"endDispute","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"itemReceived","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"modifySale","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"},{"name":"newTitle","type":"string","internalType":"string"},{"name":"newDesc","type":"string","internalType":"string"},{"name":"newPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"newSale","inputs":[{"name":"title","type":"string","internalType":"string"},{"name":"description","type":"string","internalType":"string"},{"name":"price","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeMaliciousSale","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"returnItem","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setVacationMode","inputs":[{"name":"vacationMode","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancelActiveSale(uint256)":"1d24e299","claimPowersellerBadge()":"8409ae49","disputeSale(uint256,string)":"20ca2d27","disputedSaleReply(uint256,string)":"0fa3d7d6","doBuy(uint256)":"fb7c0a3f","endDispute(uint256)":"5187b7a0","itemReceived(uint256)":"a55dd46b","modifySale(uint256,string,string,uint256)":"ab0378be","newSale(string,string,uint256)":"5937204e","removeMaliciousSale(uint256)":"a610c298","returnItem(uint256)":"223ed1dd","setVacationMode(bool)":"d9209de8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"cancelActiveSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPowersellerBadge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"buyerReasoning\",\"type\":\"string\"}],\"name\":\"disputeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sellerReasoning\",\"type\":\"string\"}],\"name\":\"disputedSaleReply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"doBuy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"endDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"itemReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newTitle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"modifySale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"newSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"removeMaliciousSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"returnItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"vacationMode\",\"type\":\"bool\"}],\"name\":\"setVacationMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Faillapop team :D \",\"custom:ctf\":\"This contract is part of JC's mock-audit exercise at https://github.com/jcr-security/solidity-security-teaching-resources\",\"kind\":\"dev\",\"methods\":{\"cancelActiveSale(uint256)\":{\"params\":{\"itemId\":\"The ID of the item which sale is being cancelled\"}},\"disputeSale(uint256,string)\":{\"params\":{\"buyerReasoning\":\"The reasoning of the buyer for the claim\",\"itemId\":\"The ID of the item being disputed\"}},\"disputedSaleReply(uint256,string)\":{\"params\":{\"itemId\":\"The ID of the item being disputed\",\"sellerReasoning\":\"The reasoning of the seller for the claim\"}},\"doBuy(uint256)\":{\"details\":\"The user must send the exact amount of Ether to buy the item\",\"params\":{\"itemId\":\"The ID of the item being bought\"}},\"endDispute(uint256)\":{\"params\":{\"itemId\":\"The ID of the item being disputed\"}},\"itemReceived(uint256)\":{\"params\":{\"itemId\":\"The ID of the item being confirmed\"}},\"modifySale(uint256,string,string,uint256)\":{\"params\":{\"itemId\":\"ID of the item being modified\",\"newDesc\":\"New description of the item being sold\",\"newPrice\":\"New price in Ether of the item being sold\",\"newTitle\":\"New title of the item being sold\"}},\"newSale(string,string,uint256)\":{\"params\":{\"description\":\"A description of the item being sold\",\"price\":\"The price in Ether of the item being sold\",\"title\":\"The title of the item being sold\"}},\"removeMaliciousSale(uint256)\":{\"params\":{\"itemId\":\"The ID of the item which sale is considered malicious\"}},\"returnItem(uint256)\":{\"params\":{\"itemId\":\"The ID of the item being returned\"}},\"setVacationMode(bool)\":{\"params\":{\"vacationMode\":\"The new vacation mode of the seller\"}}},\"title\":\"Interface of the FaillaPop Shop!\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelActiveSale(uint256)\":{\"notice\":\"Endpoint to cancel an active sale\"},\"claimPowersellerBadge()\":{\"notice\":\"Endpoint to auto-claim the Powerseller badge. The user must have at least 10 valid sales\"},\"disputeSale(uint256,string)\":{\"notice\":\"Endpoint to dispute a sale. The buyer will supply the supporting info to the DAO\"},\"disputedSaleReply(uint256,string)\":{\"notice\":\"Endpoint to reply to a dispute. The seller will supply the supporting info to the DAO. If the seller does not reply, the admin could mark them as malicious and slash their funds\"},\"doBuy(uint256)\":{\"notice\":\"Endpoint to buy an item\"},\"endDispute(uint256)\":{\"notice\":\"Endpoint to close a dispute. Both the DAO and the buyer could call this function to cancel a dispute\"},\"itemReceived(uint256)\":{\"notice\":\"Endpoint to confirm the receipt of an item and trigger the payment to the seller. \"},\"modifySale(uint256,string,string,uint256)\":{\"notice\":\"Endpoint to modify an existing sale. Locked funds will be partially realeased if price decreases.\"},\"newSale(string,string,uint256)\":{\"notice\":\"Endpoint to create a new sale. The seller must have enough funds staked in the Vault so   price amount can be locked to desincentivice malicious behavior\"},\"removeMaliciousSale(uint256)\":{\"notice\":\"Endpoint to remove a malicious sale and slash the stake. The owner of the contract can remove a malicious sale and blacklist the seller\"},\"returnItem(uint256)\":{\"notice\":\"Endpoint to return an item, only the DAO can trigger it\"},\"setVacationMode(bool)\":{\"notice\":\"Endpoint to set the vacation mode of a seller. If the seller is in vacation mode nobody can buy his goods\"}},\"notice\":\"The contract allows anyone to stake and unstake Ether. When a seller publish a new item in the shop, the funds are locked during the sale. If the user is considered malicious by the DAO, the funds are slashed. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IFP_Shop.sol\":\"IFP_Shop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts@v5.0.1/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/IFP_Shop.sol\":{\"keccak256\":\"0x9e05b9cb7fc6ef6e45246bdf8adcaeaa561899d5b0902bb49a4e4ec6219ba0b4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7936ed36632e08307f64b2cd4c7a125449e5e0241f6f22a410905b326924b953\",\"dweb:/ipfs/QmS49RX5Dz6SiyZiNNoj94sceX6Q8uktqWRNoHpzCV5Q4t\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"cancelActiveSale"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"claimPowersellerBadge"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"string","name":"buyerReasoning","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"disputeSale"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"string","name":"sellerReasoning","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"disputedSaleReply"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"stateMutability":"payable","type":"function","name":"doBuy"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"endDispute"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"itemReceived"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"string","name":"newTitle","type":"string"},{"internalType":"string","name":"newDesc","type":"string"},{"internalType":"uint256","name":"newPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"modifySale"},{"inputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"newSale"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeMaliciousSale"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"returnItem"},{"inputs":[{"internalType":"bool","name":"vacationMode","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setVacationMode"}],"devdoc":{"kind":"dev","methods":{"cancelActiveSale(uint256)":{"params":{"itemId":"The ID of the item which sale is being cancelled"}},"disputeSale(uint256,string)":{"params":{"buyerReasoning":"The reasoning of the buyer for the claim","itemId":"The ID of the item being disputed"}},"disputedSaleReply(uint256,string)":{"params":{"itemId":"The ID of the item being disputed","sellerReasoning":"The reasoning of the seller for the claim"}},"doBuy(uint256)":{"details":"The user must send the exact amount of Ether to buy the item","params":{"itemId":"The ID of the item being bought"}},"endDispute(uint256)":{"params":{"itemId":"The ID of the item being disputed"}},"itemReceived(uint256)":{"params":{"itemId":"The ID of the item being confirmed"}},"modifySale(uint256,string,string,uint256)":{"params":{"itemId":"ID of the item being modified","newDesc":"New description of the item being sold","newPrice":"New price in Ether of the item being sold","newTitle":"New title of the item being sold"}},"newSale(string,string,uint256)":{"params":{"description":"A description of the item being sold","price":"The price in Ether of the item being sold","title":"The title of the item being sold"}},"removeMaliciousSale(uint256)":{"params":{"itemId":"The ID of the item which sale is considered malicious"}},"returnItem(uint256)":{"params":{"itemId":"The ID of the item being returned"}},"setVacationMode(bool)":{"params":{"vacationMode":"The new vacation mode of the seller"}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelActiveSale(uint256)":{"notice":"Endpoint to cancel an active sale"},"claimPowersellerBadge()":{"notice":"Endpoint to auto-claim the Powerseller badge. The user must have at least 10 valid sales"},"disputeSale(uint256,string)":{"notice":"Endpoint to dispute a sale. The buyer will supply the supporting info to the DAO"},"disputedSaleReply(uint256,string)":{"notice":"Endpoint to reply to a dispute. The seller will supply the supporting info to the DAO. If the seller does not reply, the admin could mark them as malicious and slash their funds"},"doBuy(uint256)":{"notice":"Endpoint to buy an item"},"endDispute(uint256)":{"notice":"Endpoint to close a dispute. Both the DAO and the buyer could call this function to cancel a dispute"},"itemReceived(uint256)":{"notice":"Endpoint to confirm the receipt of an item and trigger the payment to the seller. "},"modifySale(uint256,string,string,uint256)":{"notice":"Endpoint to modify an existing sale. Locked funds will be partially realeased if price decreases."},"newSale(string,string,uint256)":{"notice":"Endpoint to create a new sale. The seller must have enough funds staked in the Vault so   price amount can be locked to desincentivice malicious behavior"},"removeMaliciousSale(uint256)":{"notice":"Endpoint to remove a malicious sale and slash the stake. The owner of the contract can remove a malicious sale and blacklist the seller"},"returnItem(uint256)":{"notice":"Endpoint to return an item, only the DAO can trigger it"},"setVacationMode(bool)":{"notice":"Endpoint to set the vacation mode of a seller. If the seller is in vacation mode nobody can buy his goods"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts@v5.0.1/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IFP_Shop.sol":"IFP_Shop"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IFP_Shop.sol":{"keccak256":"0x9e05b9cb7fc6ef6e45246bdf8adcaeaa561899d5b0902bb49a4e4ec6219ba0b4","urls":["bzz-raw://7936ed36632e08307f64b2cd4c7a125449e5e0241f6f22a410905b326924b953","dweb:/ipfs/QmS49RX5Dz6SiyZiNNoj94sceX6Q8uktqWRNoHpzCV5Q4t"],"license":"GPL-3.0"}},"version":1},"id":47}