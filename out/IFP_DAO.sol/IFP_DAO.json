{"abi":[{"type":"function","name":"cancelDispute","inputs":[{"name":"disputeId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"castVote","inputs":[{"name":"disputeId","type":"uint256","internalType":"uint256"},{"name":"vote","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"checkLottery","inputs":[{"name":"disputeID","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"endDispute","inputs":[{"name":"disputeId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"newDispute","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"},{"name":"buyerReasoning","type":"string","internalType":"string"},{"name":"sellerReasoning","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"setShop","inputs":[{"name":"shopAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateConfig","inputs":[{"name":"magicWord","type":"string","internalType":"string"},{"name":"newMagicWord","type":"string","internalType":"string"},{"name":"newShop","type":"address","internalType":"address"},{"name":"newNft","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancelDispute(uint256)":"df02935c","castVote(uint256,bool)":"15373e3d","checkLottery(uint256)":"f43acb52","endDispute(uint256)":"5187b7a0","newDispute(uint256,string,string)":"24ffa411","setShop(address)":"ce965f6a","updateConfig(string,string,address,address)":"59a716ad"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"cancelDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeID\",\"type\":\"uint256\"}],\"name\":\"checkLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"disputeId\",\"type\":\"uint256\"}],\"name\":\"endDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"buyerReasoning\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sellerReasoning\",\"type\":\"string\"}],\"name\":\"newDispute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"shopAddress\",\"type\":\"address\"}],\"name\":\"setShop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"magicWord\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newMagicWord\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newShop\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newNft\",\"type\":\"address\"}],\"name\":\"updateConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Faillapop team :D \",\"custom:ctf\":\"This contract is of JC's mock-audit exercise at https://github.com/jcr-security/solidity-security-teaching-resources\",\"kind\":\"dev\",\"methods\":{\"cancelDispute(uint256)\":{\"params\":{\"disputeId\":\"The ID of the target dispute\"}},\"castVote(uint256,bool)\":{\"params\":{\"disputeId\":\"The ID of the target dispute\"}},\"checkLottery(uint256)\":{\"params\":{\"disputeID\":\"The ID of the target dispute\"}},\"endDispute(uint256)\":{\"params\":{\"disputeId\":\"The ID of the target dispute\"}},\"newDispute(uint256,string,string)\":{\"params\":{\"buyerReasoning\":\"The reasoning of the buyer in favor of the claim\",\"itemId\":\"The ID of the item involved in the dispute\",\"sellerReasoning\":\"The reasoning of the seller against the claim\"}},\"setShop(address)\":{\"params\":{\"shopAddress\":\"The address of the shop \"}},\"updateConfig(string,string,address,address)\":{\"params\":{\"magicWord\":\"to authenticate as privileged user\",\"newMagicWord\":\"The new password to access key features\",\"newNft\":\"The new address of the NFT contract\",\"newShop\":\"The new address of the Shop contract\"}}},\"title\":\"Iterface of the FaillaPop voting DAO for disputes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelDispute(uint256)\":{\"notice\":\"Cancel an ongoing dispute. Either by the buyer or blacklisting (shop contract)\"},\"castVote(uint256,bool)\":{\"notice\":\"Cast a vote on a dispute\"},\"checkLottery(uint256)\":{\"notice\":\"Award NFT to a user if they voten for the winning side\"},\"endDispute(uint256)\":{\"notice\":\"Resolve a finished dispute\"},\"newDispute(uint256,string,string)\":{\"notice\":\"Open a dispute\"},\"setShop(address)\":{\"notice\":\"Sets the shop address as the new Control role\"},\"updateConfig(string,string,address,address)\":{\"notice\":\"Update the contract's configuration details\"}},\"notice\":\"The contract allow to vote with FPT tokens on open disputes. If the dispute is resolved in favor of the buyer, the seller have to refund the buyer. If the dispute is resolved in favor of the seller, the sale is closed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IFP_DAO.sol\":\"IFP_DAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts@v5.0.1/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/IFP_DAO.sol\":{\"keccak256\":\"0x932d7bb21237f351608e2920fbe82887eab5cfb86ef0f5fb3591b2963276bc8a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://12efb0b9d064b535a9a05081a5c1662f86c6bff051a71fb88ae6285de4abe77f\",\"dweb:/ipfs/QmX6bx41rqZncwpfz5xUM5jvFPb8cjyU6WfAZrrGcf9kaN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"disputeId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"cancelDispute"},{"inputs":[{"internalType":"uint256","name":"disputeId","type":"uint256"},{"internalType":"bool","name":"vote","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"castVote"},{"inputs":[{"internalType":"uint256","name":"disputeID","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"checkLottery"},{"inputs":[{"internalType":"uint256","name":"disputeId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"endDispute"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"string","name":"buyerReasoning","type":"string"},{"internalType":"string","name":"sellerReasoning","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"newDispute","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"shopAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setShop"},{"inputs":[{"internalType":"string","name":"magicWord","type":"string"},{"internalType":"string","name":"newMagicWord","type":"string"},{"internalType":"address","name":"newShop","type":"address"},{"internalType":"address","name":"newNft","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateConfig"}],"devdoc":{"kind":"dev","methods":{"cancelDispute(uint256)":{"params":{"disputeId":"The ID of the target dispute"}},"castVote(uint256,bool)":{"params":{"disputeId":"The ID of the target dispute"}},"checkLottery(uint256)":{"params":{"disputeID":"The ID of the target dispute"}},"endDispute(uint256)":{"params":{"disputeId":"The ID of the target dispute"}},"newDispute(uint256,string,string)":{"params":{"buyerReasoning":"The reasoning of the buyer in favor of the claim","itemId":"The ID of the item involved in the dispute","sellerReasoning":"The reasoning of the seller against the claim"}},"setShop(address)":{"params":{"shopAddress":"The address of the shop "}},"updateConfig(string,string,address,address)":{"params":{"magicWord":"to authenticate as privileged user","newMagicWord":"The new password to access key features","newNft":"The new address of the NFT contract","newShop":"The new address of the Shop contract"}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelDispute(uint256)":{"notice":"Cancel an ongoing dispute. Either by the buyer or blacklisting (shop contract)"},"castVote(uint256,bool)":{"notice":"Cast a vote on a dispute"},"checkLottery(uint256)":{"notice":"Award NFT to a user if they voten for the winning side"},"endDispute(uint256)":{"notice":"Resolve a finished dispute"},"newDispute(uint256,string,string)":{"notice":"Open a dispute"},"setShop(address)":{"notice":"Sets the shop address as the new Control role"},"updateConfig(string,string,address,address)":{"notice":"Update the contract's configuration details"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts@v5.0.1/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IFP_DAO.sol":"IFP_DAO"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IFP_DAO.sol":{"keccak256":"0x932d7bb21237f351608e2920fbe82887eab5cfb86ef0f5fb3591b2963276bc8a","urls":["bzz-raw://12efb0b9d064b535a9a05081a5c1662f86c6bff051a71fb88ae6285de4abe77f","dweb:/ipfs/QmX6bx41rqZncwpfz5xUM5jvFPb8cjyU6WfAZrrGcf9kaN"],"license":"GPL-3.0"}},"version":1},"id":45}